{
  "nodes": [
    { "nodeName": "ts-admin-user-service", "nodeType": "service" },
    { "nodeName": "ts-consign-price-service", "nodeType": "service" },
    { "nodeName": "ts-consign-service", "nodeType": "service" },
    { "nodeName": "ts-train-service", "nodeType": "service" },
    { "nodeName": "ts-route-service", "nodeType": "service" },
    { "nodeName": "ts-admin-route-service", "nodeType": "service" },
    { "nodeName": "ts-price-service", "nodeType": "service" },
    { "nodeName": "ts-assurance-service", "nodeType": "service" },
    { "nodeName": "ts-order-other-service", "nodeType": "service" },
    { "nodeName": "ts-verification-code-service", "nodeType": "service" },
    { "nodeName": "ts-user-service", "nodeType": "service" },
    { "nodeName": "ts-admin-basic-info-service", "nodeType": "service" },
    { "nodeName": "ts-route-plan-service", "nodeType": "service" },
    { "nodeName": "ts-gateway-service", "nodeType": "service" },
    { "nodeName": "ts-food-service", "nodeType": "service" },
    { "nodeName": "ts-preserve-service", "nodeType": "service" },
    { "nodeName": "ts-payment-service", "nodeType": "service" },
    { "nodeName": "ts-seat-service", "nodeType": "service" },
    { "nodeName": "ts-travel-service", "nodeType": "service" },
    { "nodeName": "ts-cancel-service", "nodeType": "service" },
    { "nodeName": "ts-station-service", "nodeType": "service" },
    { "nodeName": "ts-admin-order-service", "nodeType": "service" },
    { "nodeName": "ts-security-service", "nodeType": "service" },
    { "nodeName": "ts-wait-order-service", "nodeType": "service" },
    { "nodeName": "ts-order-service", "nodeType": "service" },
    { "nodeName": "ts-rebook-service", "nodeType": "service" },
    { "nodeName": "ts-train-food-service", "nodeType": "service" },
    { "nodeName": "ts-auth-service", "nodeType": "service" },
    { "nodeName": "ts-travel-plan-service", "nodeType": "service" },
    { "nodeName": "ts-preserve-other-service", "nodeType": "service" },
    { "nodeName": "ts-inside-payment-service", "nodeType": "service" },
    { "nodeName": "ts-basic-service", "nodeType": "service" },
    { "nodeName": "ts-delivery-service", "nodeType": "service" },
    { "nodeName": "ts-execute-service", "nodeType": "service" },
    { "nodeName": "ts-station-food-service", "nodeType": "service" },
    { "nodeName": "ts-admin-travel-service", "nodeType": "service" },
    { "nodeName": "ts-food-delivery-service", "nodeType": "service" },
    { "nodeName": "ts-travel2-service", "nodeType": "service" },
    { "nodeName": "ts-notification-service", "nodeType": "service" },
    { "nodeName": "ts-config-service", "nodeType": "service" },
    { "nodeName": "ts-contacts-service", "nodeType": "service" }
  ],
  "links": [
    {
      "source": "ts-admin-basic-info-service",
      "target": "ts-train-service",
      "requests": [
        {
          "type": "DELETE",
          "uri": "ts-contacts-service/api/v1/contactservice/contacts/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.deleteContact",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "DELETE",
          "uri": "ts-station-service/api/v1/stationservice/stations/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.deleteStation",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "DELETE",
          "uri": "ts-config-service/api/v1/configservice/configs/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.deleteConfig",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "GET",
          "uri": "ts-station-service/api/v1/stationservice/stations",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.query(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.getAllStations",
          "parentMethodParameters": ["org.springframework.http.HttpHeaders"],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "DELETE",
          "uri": "ts-price-service/api/v1/priceservice/prices/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.deletePrice",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "PUT",
          "uri": "ts-station-service/api/v1/stationservice/stations",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.update(train.entity.TrainType, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.modifyStation",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Station",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-basic-info-service",
      "target": "ts-travel-service",
      "requests": [
        {
          "type": "PUT",
          "uri": "ts-train-service/api/v1/trainservice/trains",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.updateTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.modifyTrain",
          "parentMethodParameters": [
            "edu.fudan.common.entity.TrainType",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "DELETE",
          "uri": "ts-train-service/api/v1/trainservice/trains/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.deleteTrip(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips/{tripId}",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.deleteTrain",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "GET",
          "uri": "ts-price-service/api/v1/priceservice/prices",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryAll(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.getAllPrices",
          "parentMethodParameters": ["org.springframework.http.HttpHeaders"],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-price-service/api/v1/priceservice/prices",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.createTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.addPrice",
          "parentMethodParameters": [
            "adminbasic.entity.PriceInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "PUT",
          "uri": "ts-price-service/api/v1/priceservice/prices",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.updateTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.modifyPrice",
          "parentMethodParameters": [
            "adminbasic.entity.PriceInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-train-service/api/v1/trainservice/trains",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.createTrip(edu.fudan.common.entity.TravelInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.addTrain",
          "parentMethodParameters": [
            "edu.fudan.common.entity.TrainType",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "GET",
          "uri": "ts-train-service/api/v1/trainservice/trains",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryAll(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.getAllTrains",
          "parentMethodParameters": ["org.springframework.http.HttpHeaders"],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-basic-info-service",
      "target": "ts-config-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-contacts-service/api/v1/contactservice/contacts/admin",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.createConfig(config.entity.Config, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-config-service",
          "targetEndpointUri": "api/v1/configservice/configs",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.addContact",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Contacts",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "GET",
          "uri": "ts-contacts-service/api/v1/contactservice/contacts",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.queryAll(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-config-service",
          "targetEndpointUri": "api/v1/configservice/configs",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.getAllContacts",
          "parentMethodParameters": ["org.springframework.http.HttpHeaders"],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "PUT",
          "uri": "ts-contacts-service/api/v1/contactservice/contacts",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.updateConfig(config.entity.Config, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-config-service",
          "targetEndpointUri": "api/v1/configservice/configs",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.modifyContact",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Contacts",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-basic-info-service",
      "target": "ts-consign-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-config-service/api/v1/configservice/configs",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.insertConsign(consign.entity.Consign, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-consign-service",
          "targetEndpointUri": "/api/v1/consignservice/consigns",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.addConfig",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Config",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        },
        {
          "type": "PUT",
          "uri": "ts-config-service/api/v1/configservice/configs",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-consign-service/org.springframework.http.HttpEntity consign.controller.ConsignController.updateConsign(consign.entity.Consign, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-consign-service",
          "targetEndpointUri": "/api/v1/consignservice/consigns",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.modifyConfig",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Config",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-basic-info-service",
      "target": "ts-seat-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-station-service/api/v1/stationservice/stations",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-seat-service/org.springframework.http.HttpEntity seat.controller.SeatController.create(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-seat-service",
          "targetEndpointUri": "/api/v1/seatservice/seats",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.addStation",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Station",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-basic-info-service",
      "target": "ts-contacts-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-config-service/api/v1/configservice/configs",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getAllContacts(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-contacts-service",
          "targetEndpointUri": "api/v1/contactservice/contacts",
          "isCollection": false,
          "parentMethod": "adminbasic.service.AdminBasicInfoServiceImpl.getAllConfigs",
          "parentMethodParameters": ["org.springframework.http.HttpHeaders"],
          "msName": "ts-admin-basic-info-service",
          "restCallInClassName": "adminbasic.service.AdminBasicInfoServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-order-service",
      "target": "ts-order-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-order-other-service/api/v1/orderOtherService/orderOther/admin",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.addcreateNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order/admin",
          "isCollection": false,
          "parentMethod": "adminorder.service.AdminOrderServiceImpl.addOrder",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Order",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-order-service",
          "restCallInClassName": "adminorder.service.AdminOrderServiceImpl"
        },
        {
          "type": "PUT",
          "uri": "ts-order-other-service/api/v1/orderOtherService/orderOther/admin",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.updateOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order/admin",
          "isCollection": false,
          "parentMethod": "adminorder.service.AdminOrderServiceImpl.updateOrder",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Order",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-order-service",
          "restCallInClassName": "adminorder.service.AdminOrderServiceImpl"
        },
        {
          "type": "DELETE",
          "uri": "ts-order-other-service/api/v1/orderOtherService/orderOther/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.deleteOrder(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order/{orderId}",
          "isCollection": false,
          "parentMethod": "adminorder.service.AdminOrderServiceImpl.deleteOrder",
          "parentMethodParameters": [
            "java.lang.String",
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-order-service",
          "restCallInClassName": "adminorder.service.AdminOrderServiceImpl"
        },
        {
          "type": "GET",
          "uri": "ts-order-other-service/api/v1/orderOtherService/orderOther",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.findAllOrder(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order",
          "isCollection": false,
          "parentMethod": "adminorder.service.AdminOrderServiceImpl.getAllOrders",
          "parentMethodParameters": ["org.springframework.http.HttpHeaders"],
          "msName": "ts-admin-order-service",
          "restCallInClassName": "adminorder.service.AdminOrderServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-order-service",
      "target": "ts-train-service",
      "requests": [
        {
          "type": "DELETE",
          "uri": "ts-order-service/api/v1/orderservice/order/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "adminorder.service.AdminOrderServiceImpl.deleteOrder",
          "parentMethodParameters": [
            "java.lang.String",
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-order-service",
          "restCallInClassName": "adminorder.service.AdminOrderServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-order-service",
      "target": "ts-food-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-order-service/api/v1/orderservice/order",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.findAllFoodOrder(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-food-service",
          "targetEndpointUri": "/api/v1/foodservice/orders",
          "isCollection": false,
          "parentMethod": "adminorder.service.AdminOrderServiceImpl.getAllOrders",
          "parentMethodParameters": ["org.springframework.http.HttpHeaders"],
          "msName": "ts-admin-order-service",
          "restCallInClassName": "adminorder.service.AdminOrderServiceImpl"
        },
        {
          "type": "PUT",
          "uri": "ts-order-service/api/v1/orderservice/order/admin",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-food-service",
          "targetEndpointUri": "/api/v1/foodservice/orders",
          "isCollection": false,
          "parentMethod": "adminorder.service.AdminOrderServiceImpl.updateOrder",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Order",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-order-service",
          "restCallInClassName": "adminorder.service.AdminOrderServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-order-service/api/v1/orderservice/order/admin",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-food-service",
          "targetEndpointUri": "/api/v1/foodservice/orders",
          "isCollection": false,
          "parentMethod": "adminorder.service.AdminOrderServiceImpl.addOrder",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Order",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-order-service",
          "restCallInClassName": "adminorder.service.AdminOrderServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-route-service",
      "target": "ts-food-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-route-service/api/v1/routeservice/routes",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.findAllFoodOrder(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-food-service",
          "targetEndpointUri": "/api/v1/foodservice/orders",
          "isCollection": false,
          "parentMethod": "adminroute.service.AdminRouteServiceImpl.getAllRoutes",
          "parentMethodParameters": ["org.springframework.http.HttpHeaders"],
          "msName": "ts-admin-route-service",
          "restCallInClassName": "adminroute.service.AdminRouteServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-route-service/api/v1/routeservice/routes",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-food-service",
          "targetEndpointUri": "/api/v1/foodservice/orders",
          "isCollection": false,
          "parentMethod": "adminroute.service.AdminRouteServiceImpl.createAndModifyRoute",
          "parentMethodParameters": [
            "edu.fudan.common.entity.RouteInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-route-service",
          "restCallInClassName": "adminroute.service.AdminRouteServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-route-service",
      "target": "ts-train-service",
      "requests": [
        {
          "type": "DELETE",
          "uri": "ts-route-service/api/v1/routeservice/routes/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.delete(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "adminroute.service.AdminRouteServiceImpl.deleteRoute",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-route-service",
          "restCallInClassName": "adminroute.service.AdminRouteServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-route-service",
      "target": "ts-station-food-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-station-service/api/v1/stationservice/stations/idlist",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodStoresByStationNames(java.util.List\u003cjava.lang.String\u003e)",
          "endpointMsName": "ts-station-food-service",
          "targetEndpointUri": "/api/v1/stationfoodservice/stationfoodstores",
          "isCollection": false,
          "parentMethod": "adminroute.service.AdminRouteServiceImpl.checkStationsExists",
          "parentMethodParameters": [
            "java.util.List\u003cjava.lang.String\u003e",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-route-service",
          "restCallInClassName": "adminroute.service.AdminRouteServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-travel-service",
      "target": "ts-travel-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-train-service/api/v1/trainservice/trains/byName/",
          "requestReturn": "edu.fudan.common.entity.TrainType",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips/{tripId}",
          "isCollection": false,
          "parentMethod": "admintravel.service.AdminTravelServiceImpl.queryTrainTypeByName",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-travel-service",
          "restCallInClassName": "admintravel.service.AdminTravelServiceImpl"
        },
        {
          "type": "GET",
          "uri": "ts-travel2-service/api/v1/travel2service/admin_trip",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.adminQueryAll(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/admin_trip",
          "isCollection": false,
          "parentMethod": "admintravel.service.AdminTravelServiceImpl.getAllTravels",
          "parentMethodParameters": ["org.springframework.http.HttpHeaders"],
          "msName": "ts-admin-travel-service",
          "restCallInClassName": "admintravel.service.AdminTravelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-travel-service",
      "target": "ts-station-food-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-station-service/api/v1/stationservice/stations/idlist",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodStoresByStationNames(java.util.List\u003cjava.lang.String\u003e)",
          "endpointMsName": "ts-station-food-service",
          "targetEndpointUri": "/api/v1/stationfoodservice/stationfoodstores",
          "isCollection": false,
          "parentMethod": "admintravel.service.AdminTravelServiceImpl.checkStationsExists",
          "parentMethodParameters": [
            "java.util.List\u003cjava.lang.String\u003e",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-travel-service",
          "restCallInClassName": "admintravel.service.AdminTravelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-travel-service",
      "target": "ts-contacts-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-route-service/api/v1/routeservice/routes/",
          "requestReturn": "edu.fudan.common.entity.Route",
          "endpointFunction": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-contacts-service",
          "targetEndpointUri": "api/v1/contactservice/contacts/{id}",
          "isCollection": false,
          "parentMethod": "admintravel.service.AdminTravelServiceImpl.getRouteByRouteId",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-travel-service",
          "restCallInClassName": "admintravel.service.AdminTravelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-travel-service",
      "target": "ts-travel2-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-travel-service/api/v1/travelservice/admin_trip",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.adminQueryAll(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel2-service",
          "targetEndpointUri": "/api/v1/travel2service/admin_trip",
          "isCollection": false,
          "parentMethod": "admintravel.service.AdminTravelServiceImpl.getAllTravels",
          "parentMethodParameters": ["org.springframework.http.HttpHeaders"],
          "msName": "ts-admin-travel-service",
          "restCallInClassName": "admintravel.service.AdminTravelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-user-service",
      "target": "ts-user-service",
      "requests": [
        {
          "type": "PUT",
          "uri": "UPDATE USER: ts-user-service/api/v1/userservice/users",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-user-service/org.springframework.http.ResponseEntity user.controller.UserController.updateUser(user.dto.UserDto, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-user-service",
          "targetEndpointUri": "/api/v1/userservice/users",
          "isCollection": false,
          "parentMethod": "adminuser.service.AdminUserServiceImpl.updateUser",
          "parentMethodParameters": [
            "adminuser.dto.UserDto",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-user-service",
          "restCallInClassName": "adminuser.service.AdminUserServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-user-service",
      "target": "ts-order-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-user-service/api/v1/userservice/users/register",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.queryOrdersForRefresh(order.entity.OrderInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order/refresh",
          "isCollection": false,
          "parentMethod": "adminuser.service.AdminUserServiceImpl.addUser",
          "parentMethodParameters": [
            "adminuser.dto.UserDto",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-user-service",
          "restCallInClassName": "adminuser.service.AdminUserServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-user-service",
      "target": "ts-auth-service",
      "requests": [
        {
          "type": "DELETE",
          "uri": "ts-user-service/api/v1/userservice/users/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-auth-service/org.springframework.http.ResponseEntity auth.controller.UserController.deleteUserById(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-auth-service",
          "targetEndpointUri": "/api/v1/users/{userId}",
          "isCollection": false,
          "parentMethod": "adminuser.service.AdminUserServiceImpl.deleteUser",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-admin-user-service",
          "restCallInClassName": "adminuser.service.AdminUserServiceImpl"
        }
      ]
    },
    {
      "source": "ts-admin-user-service",
      "target": "ts-food-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-user-service/api/v1/userservice/users",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.findAllFoodOrder(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-food-service",
          "targetEndpointUri": "/api/v1/foodservice/orders",
          "isCollection": false,
          "parentMethod": "adminuser.service.AdminUserServiceImpl.getAllUsers",
          "parentMethodParameters": ["org.springframework.http.HttpHeaders"],
          "msName": "ts-admin-user-service",
          "restCallInClassName": "adminuser.service.AdminUserServiceImpl"
        }
      ]
    },
    {
      "source": "ts-basic-service",
      "target": "ts-travel-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-train-service/api/v1/trainservice/trains/byName/",
          "requestReturn": "edu.fudan.common.entity.TrainType",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips/{tripId}",
          "isCollection": false,
          "parentMethod": "fdse.microservice.service.BasicServiceImpl.queryTrainTypeByName",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-basic-service",
          "restCallInClassName": "fdse.microservice.service.BasicServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-train-service/api/v1/trainservice/trains/byNames",
          "requestReturn": "java.util.List",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getTripsByRouteId(java.util.ArrayList\u003cjava.lang.String\u003e, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips/routes",
          "isCollection": false,
          "parentMethod": "fdse.microservice.service.BasicServiceImpl.queryTrainTypeByNames",
          "parentMethodParameters": [
            "java.util.List\u003cjava.lang.String\u003e",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-basic-service",
          "restCallInClassName": "fdse.microservice.service.BasicServiceImpl"
        }
      ]
    },
    {
      "source": "ts-basic-service",
      "target": "ts-contacts-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-route-service/api/v1/routeservice/routes/",
          "requestReturn": "edu.fudan.common.entity.Route",
          "endpointFunction": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-contacts-service",
          "targetEndpointUri": "api/v1/contactservice/contacts/{id}",
          "isCollection": false,
          "parentMethod": "fdse.microservice.service.BasicServiceImpl.getRouteByRouteId",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-basic-service",
          "restCallInClassName": "fdse.microservice.service.BasicServiceImpl"
        }
      ]
    },
    {
      "source": "ts-basic-service",
      "target": "ts-train-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-station-service/api/v1/stationservice/stations/id/",
          "requestReturn": "boolean",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "fdse.microservice.service.BasicServiceImpl.checkStationExists",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-basic-service",
          "restCallInClassName": "fdse.microservice.service.BasicServiceImpl"
        },
        {
          "type": "GET",
          "uri": "ts-station-service/api/v1/stationservice/stations/id/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "fdse.microservice.service.BasicServiceImpl.queryForStationId",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-basic-service",
          "restCallInClassName": "fdse.microservice.service.BasicServiceImpl"
        },
        {
          "type": "GET",
          "uri": "ts-price-service/api/v1/priceservice/prices//",
          "requestReturn": "edu.fudan.common.entity.PriceConfig",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdAndTrainType",
          "parentMethodParameters": [
            "java.lang.String",
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-basic-service",
          "restCallInClassName": "fdse.microservice.service.BasicServiceImpl"
        }
      ]
    },
    {
      "source": "ts-basic-service",
      "target": "ts-station-food-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-station-service/api/v1/stationservice/stations/idlist",
          "requestReturn": "java.util.Map",
          "endpointFunction": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodStoresByStationNames(java.util.List\u003cjava.lang.String\u003e)",
          "endpointMsName": "ts-station-food-service",
          "targetEndpointUri": "/api/v1/stationfoodservice/stationfoodstores",
          "isCollection": false,
          "parentMethod": "fdse.microservice.service.BasicServiceImpl.checkStationsExists",
          "parentMethodParameters": [
            "java.util.List\u003cjava.lang.String\u003e",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-basic-service",
          "restCallInClassName": "fdse.microservice.service.BasicServiceImpl"
        }
      ]
    },
    {
      "source": "ts-basic-service",
      "target": "ts-price-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-price-service/api/v1/priceservice/prices/byRouteIdsAndTrainTypes",
          "requestReturn": "java.util.Map",
          "endpointFunction": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.query(java.util.List\u003cjava.lang.String\u003e, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-price-service",
          "targetEndpointUri": "/api/v1/priceservice/prices/byRouteIdsAndTrainTypes",
          "isCollection": false,
          "parentMethod": "fdse.microservice.service.BasicServiceImpl.queryPriceConfigByRouteIdsAndTrainTypes",
          "parentMethodParameters": [
            "java.util.List\u003cjava.lang.String\u003e",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-basic-service",
          "restCallInClassName": "fdse.microservice.service.BasicServiceImpl"
        }
      ]
    },
    {
      "source": "ts-cancel-service",
      "target": "ts-food-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-order-service/api/v1/orderservice/order/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.findAllFoodOrder(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-food-service",
          "targetEndpointUri": "/api/v1/foodservice/orders",
          "isCollection": false,
          "parentMethod": "cancel.service.CancelServiceImpl.getOrderByIdFromOrder",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-cancel-service",
          "restCallInClassName": "cancel.service.CancelServiceImpl"
        },
        {
          "type": "PUT",
          "uri": "ts-order-service/api/v1/orderservice/order",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.updateFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-food-service",
          "targetEndpointUri": "/api/v1/foodservice/orders",
          "isCollection": false,
          "parentMethod": "cancel.service.CancelServiceImpl.cancelFromOrder",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Order",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-cancel-service",
          "restCallInClassName": "cancel.service.CancelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-cancel-service",
      "target": "ts-admin-user-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-user-service/api/v1/userservice/users/id/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-admin-user-service/org.springframework.http.HttpEntity adminuser.controller.AdminUserController.getAllUsers(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-admin-user-service",
          "targetEndpointUri": "/api/v1/adminuserservice/users",
          "isCollection": false,
          "parentMethod": "cancel.service.CancelServiceImpl.getAccount",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-cancel-service",
          "restCallInClassName": "cancel.service.CancelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-cancel-service",
      "target": "ts-order-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-order-other-service/api/v1/orderOtherService/orderOther/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order/{orderId}",
          "isCollection": false,
          "parentMethod": "cancel.service.CancelServiceImpl.getOrderByIdFromOrderOther",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-cancel-service",
          "restCallInClassName": "cancel.service.CancelServiceImpl"
        },
        {
          "type": "PUT",
          "uri": "ts-order-other-service/api/v1/orderOtherService/orderOther",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.saveOrderInfo(order.entity.Order, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order",
          "isCollection": false,
          "parentMethod": "cancel.service.CancelServiceImpl.cancelFromOtherOrder",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Order",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-cancel-service",
          "restCallInClassName": "cancel.service.CancelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-execute-service",
      "target": "ts-food-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-order-service/api/v1/orderservice/order/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.findAllFoodOrder(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-food-service",
          "targetEndpointUri": "/api/v1/foodservice/orders",
          "isCollection": false,
          "parentMethod": "execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrder",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-execute-service",
          "restCallInClassName": "execute.serivce.ExecuteServiceImpl"
        }
      ]
    },
    {
      "source": "ts-execute-service",
      "target": "ts-order-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-order-other-service/api/v1/orderOtherService/orderOther/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getOrderById(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order/{orderId}",
          "isCollection": false,
          "parentMethod": "execute.serivce.ExecuteServiceImpl.getOrderByIdFromOrderOther",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-execute-service",
          "restCallInClassName": "execute.serivce.ExecuteServiceImpl"
        }
      ]
    },
    {
      "source": "ts-food-delivery-service",
      "target": "ts-train-food-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-station-food-service/api/v1/stationfoodservice/stationfoodstores/bystoreid/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-train-food-service/org.springframework.http.HttpEntity trainFood.controller.TrainFoodController.getTrainFoodOfTrip(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-food-service",
          "targetEndpointUri": "/api/v1/trainfoodservice/trainfoods/{tripId}",
          "isCollection": false,
          "parentMethod": "food_delivery.service.FoodDeliveryServiceImpl.createFoodDeliveryOrder",
          "parentMethodParameters": [
            "food_delivery.entity.FoodDeliveryOrder",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-food-delivery-service",
          "restCallInClassName": "food_delivery.service.FoodDeliveryServiceImpl"
        }
      ]
    },
    {
      "source": "ts-food-service",
      "target": "ts-train-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-train-food-service/api/v1/trainfoodservice/trainfoods/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "foodsearch.service.FoodServiceImpl.getAllFood",
          "parentMethodParameters": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-food-service",
          "restCallInClassName": "foodsearch.service.FoodServiceImpl"
        }
      ]
    },
    {
      "source": "ts-food-service",
      "target": "ts-station-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-station-food-service/api/v1/stationfoodservice/stationfoodstores",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-station-service/org.springframework.http.HttpEntity fdse.microservice.controller.StationController.queryForIdBatch(java.util.List\u003cjava.lang.String\u003e, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-station-service",
          "targetEndpointUri": "/api/v1/stationservice/stations/idlist",
          "isCollection": false,
          "parentMethod": "foodsearch.service.FoodServiceImpl.getAllFood",
          "parentMethodParameters": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-food-service",
          "restCallInClassName": "foodsearch.service.FoodServiceImpl"
        }
      ]
    },
    {
      "source": "ts-inside-payment-service",
      "target": "ts-price-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-payment-service/api/v1/paymentservice/payment",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.create(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-price-service",
          "targetEndpointUri": "/api/v1/priceservice/prices",
          "isCollection": false,
          "parentMethod": "inside_payment.service.InsidePaymentServiceImpl.pay",
          "parentMethodParameters": [
            "inside_payment.entity.PaymentInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-inside-payment-service",
          "restCallInClassName": "inside_payment.service.InsidePaymentServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-payment-service/api/v1/paymentservice/payment",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-price-service/org.springframework.http.HttpEntity price.controller.PriceController.create(price.entity.PriceConfig, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-price-service",
          "targetEndpointUri": "/api/v1/priceservice/prices",
          "isCollection": false,
          "parentMethod": "inside_payment.service.InsidePaymentServiceImpl.payDifference",
          "parentMethodParameters": [
            "inside_payment.entity.PaymentInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-inside-payment-service",
          "restCallInClassName": "inside_payment.service.InsidePaymentServiceImpl"
        }
      ]
    },
    {
      "source": "ts-order-other-service",
      "target": "ts-station-food-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-station-service/api/v1/stationservice/stations/namelist",
          "requestReturn": "java.util.List",
          "endpointFunction": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodStoresByStationNames(java.util.List\u003cjava.lang.String\u003e)",
          "endpointMsName": "ts-station-food-service",
          "targetEndpointUri": "/api/v1/stationfoodservice/stationfoodstores",
          "isCollection": false,
          "parentMethod": "other.service.OrderOtherServiceImpl.queryForStationId",
          "parentMethodParameters": [
            "java.util.List\u003cjava.lang.String\u003e",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-order-other-service",
          "restCallInClassName": "other.service.OrderOtherServiceImpl"
        }
      ]
    },
    {
      "source": "ts-order-service",
      "target": "ts-station-food-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-station-service/api/v1/stationservice/stations/namelist",
          "requestReturn": "java.util.List",
          "endpointFunction": "ts-station-food-service/org.springframework.http.HttpEntity food.controller.StationFoodController.getFoodStoresByStationNames(java.util.List\u003cjava.lang.String\u003e)",
          "endpointMsName": "ts-station-food-service",
          "targetEndpointUri": "/api/v1/stationfoodservice/stationfoodstores",
          "isCollection": false,
          "parentMethod": "order.service.OrderServiceImpl.queryForStationId",
          "parentMethodParameters": [
            "java.util.List\u003cjava.lang.String\u003e",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-order-service",
          "restCallInClassName": "order.service.OrderServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-other-service",
      "target": "ts-config-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-contacts-service/api/v1/contactservice/contacts/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.queryAll(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-config-service",
          "targetEndpointUri": "api/v1/configservice/configs",
          "isCollection": false,
          "parentMethod": "preserveOther.service.PreserveOtherServiceImpl.getContactsById",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-other-service",
          "restCallInClassName": "preserveOther.service.PreserveOtherServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-consign-service/api/v1/consignservice/consigns",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.createConfig(config.entity.Config, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-config-service",
          "targetEndpointUri": "api/v1/configservice/configs",
          "isCollection": false,
          "parentMethod": "preserveOther.service.PreserveOtherServiceImpl.createConsign",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Consign",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-other-service",
          "restCallInClassName": "preserveOther.service.PreserveOtherServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-other-service",
      "target": "ts-train-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-station-service/api/v1/stationservice/stations/id/",
          "requestReturn": "java.lang.String",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "preserveOther.service.PreserveOtherServiceImpl.queryForStationId",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-other-service",
          "restCallInClassName": "preserveOther.service.PreserveOtherServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-other-service",
      "target": "ts-admin-basic-info-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-basic-service/api/v1/basicservice/basic/travel",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-admin-basic-info-service",
          "targetEndpointUri": "/api/v1/adminbasicservice/adminbasic/trains",
          "isCollection": false,
          "parentMethod": "preserveOther.service.PreserveOtherServiceImpl.preserve",
          "parentMethodParameters": [
            "edu.fudan.common.entity.OrderTicketsInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-other-service",
          "restCallInClassName": "preserveOther.service.PreserveOtherServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-other-service",
      "target": "ts-travel-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-travel2-service/api/v1/travel2service/trip_detail",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trip_detail",
          "isCollection": false,
          "parentMethod": "preserveOther.service.PreserveOtherServiceImpl.getTripAllDetailInformation",
          "parentMethodParameters": [
            "edu.fudan.common.entity.TripAllDetailInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-other-service",
          "restCallInClassName": "preserveOther.service.PreserveOtherServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-other-service",
      "target": "ts-order-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-order-other-service/api/v1/orderOtherService/orderOther",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.queryOrders(order.entity.OrderInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order/query",
          "isCollection": false,
          "parentMethod": "preserveOther.service.PreserveOtherServiceImpl.createOrder",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Order",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-other-service",
          "restCallInClassName": "preserveOther.service.PreserveOtherServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-food-service/api/v1/foodservice/orders",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.createNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order",
          "isCollection": false,
          "parentMethod": "preserveOther.service.PreserveOtherServiceImpl.createFoodOrder",
          "parentMethodParameters": [
            "edu.fudan.common.entity.FoodOrder",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-other-service",
          "restCallInClassName": "preserveOther.service.PreserveOtherServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-other-service",
      "target": "ts-route-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-seat-service/api/v1/seatservice/seats",
          "requestReturn": "edu.fudan.common.entity.Ticket",
          "endpointFunction": "ts-route-service/org.springframework.http.ResponseEntity route.controller.RouteController.createAndModifyRoute(route.entity.RouteInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-route-service",
          "targetEndpointUri": "/api/v1/routeservice/routes",
          "isCollection": false,
          "parentMethod": "preserveOther.service.PreserveOtherServiceImpl.dipatchSeat",
          "parentMethodParameters": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "int",
            "int",
            "java.util.List\u003cjava.lang.String\u003e",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-other-service",
          "restCallInClassName": "preserveOther.service.PreserveOtherServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-other-service",
      "target": "ts-admin-user-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-user-service/api/v1/userservice/users/id/",
          "requestReturn": "edu.fudan.common.entity.User",
          "endpointFunction": "ts-admin-user-service/org.springframework.http.HttpEntity adminuser.controller.AdminUserController.getAllUsers(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-admin-user-service",
          "targetEndpointUri": "/api/v1/adminuserservice/users",
          "isCollection": false,
          "parentMethod": "preserveOther.service.PreserveOtherServiceImpl.getAccount",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-other-service",
          "restCallInClassName": "preserveOther.service.PreserveOtherServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-other-service",
      "target": "ts-contacts-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-assurance-service/api/v1/assuranceservice/assurances//",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-contacts-service",
          "targetEndpointUri": "api/v1/contactservice/contacts/{id}",
          "isCollection": false,
          "parentMethod": "preserveOther.service.PreserveOtherServiceImpl.addAssuranceForOrder",
          "parentMethodParameters": [
            "int",
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-other-service",
          "restCallInClassName": "preserveOther.service.PreserveOtherServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-service",
      "target": "ts-contacts-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-assurance-service/api/v1/assuranceservice/assurances//",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-contacts-service",
          "targetEndpointUri": "api/v1/contactservice/contacts/{id}",
          "isCollection": false,
          "parentMethod": "preserve.service.PreserveServiceImpl.addAssuranceForOrder",
          "parentMethodParameters": [
            "int",
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-service",
          "restCallInClassName": "preserve.service.PreserveServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-service",
      "target": "ts-train-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-station-service/api/v1/stationservice/stations/id/",
          "requestReturn": "java.lang.String",
          "endpointFunction": "ts-train-service/org.springframework.http.HttpEntity train.controller.TrainController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-train-service",
          "targetEndpointUri": "/api/v1/trainservice/trains/{id}",
          "isCollection": false,
          "parentMethod": "preserve.service.PreserveServiceImpl.queryForStationId",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-service",
          "restCallInClassName": "preserve.service.PreserveServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-service",
      "target": "ts-admin-basic-info-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-basic-service/api/v1/basicservice/basic/travel",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-admin-basic-info-service",
          "targetEndpointUri": "/api/v1/adminbasicservice/adminbasic/trains",
          "isCollection": false,
          "parentMethod": "preserve.service.PreserveServiceImpl.preserve",
          "parentMethodParameters": [
            "edu.fudan.common.entity.OrderTicketsInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-service",
          "restCallInClassName": "preserve.service.PreserveServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-service",
      "target": "ts-route-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-seat-service/api/v1/seatservice/seats",
          "requestReturn": "edu.fudan.common.entity.Ticket",
          "endpointFunction": "ts-route-service/org.springframework.http.ResponseEntity route.controller.RouteController.createAndModifyRoute(route.entity.RouteInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-route-service",
          "targetEndpointUri": "/api/v1/routeservice/routes",
          "isCollection": false,
          "parentMethod": "preserve.service.PreserveServiceImpl.dipatchSeat",
          "parentMethodParameters": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "int",
            "int",
            "java.util.List\u003cjava.lang.String\u003e",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-service",
          "restCallInClassName": "preserve.service.PreserveServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-service",
      "target": "ts-wait-order-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-order-service/api/v1/orderservice/order",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-wait-order-service/org.springframework.http.HttpEntity waitorder.controller.WaitListOrderController.createNewOrder(waitorder.entity.WaitListOrderVO, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-wait-order-service",
          "targetEndpointUri": "/api/v1/waitorderservice/order",
          "isCollection": false,
          "parentMethod": "preserve.service.PreserveServiceImpl.createOrder",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Order",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-service",
          "restCallInClassName": "preserve.service.PreserveServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-service",
      "target": "ts-config-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-consign-service/api/v1/consignservice/consigns",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.createConfig(config.entity.Config, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-config-service",
          "targetEndpointUri": "api/v1/configservice/configs",
          "isCollection": false,
          "parentMethod": "preserve.service.PreserveServiceImpl.createConsign",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Consign",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-service",
          "restCallInClassName": "preserve.service.PreserveServiceImpl"
        },
        {
          "type": "GET",
          "uri": "ts-contacts-service/api/v1/contactservice/contacts/",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-config-service/org.springframework.http.HttpEntity config.controller.ConfigController.queryAll(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-config-service",
          "targetEndpointUri": "api/v1/configservice/configs",
          "isCollection": false,
          "parentMethod": "preserve.service.PreserveServiceImpl.getContactsById",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-service",
          "restCallInClassName": "preserve.service.PreserveServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-service",
      "target": "ts-order-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-food-service/api/v1/foodservice/orders",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.createNewOrder(order.entity.Order, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order",
          "isCollection": false,
          "parentMethod": "preserve.service.PreserveServiceImpl.createFoodOrder",
          "parentMethodParameters": [
            "edu.fudan.common.entity.FoodOrder",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-service",
          "restCallInClassName": "preserve.service.PreserveServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-service",
      "target": "ts-travel2-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-travel-service/api/v1/travelservice/trip_detail",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.getTripAllDetailInfo(edu.fudan.common.entity.TripAllDetailInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel2-service",
          "targetEndpointUri": "/api/v1/travel2service/trip_detail",
          "isCollection": false,
          "parentMethod": "preserve.service.PreserveServiceImpl.getTripAllDetailInformation",
          "parentMethodParameters": [
            "edu.fudan.common.entity.TripAllDetailInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-service",
          "restCallInClassName": "preserve.service.PreserveServiceImpl"
        }
      ]
    },
    {
      "source": "ts-preserve-service",
      "target": "ts-admin-user-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-user-service/api/v1/userservice/users/id/",
          "requestReturn": "edu.fudan.common.entity.User",
          "endpointFunction": "ts-admin-user-service/org.springframework.http.HttpEntity adminuser.controller.AdminUserController.getAllUsers(org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-admin-user-service",
          "targetEndpointUri": "/api/v1/adminuserservice/users",
          "isCollection": false,
          "parentMethod": "preserve.service.PreserveServiceImpl.getAccount",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-preserve-service",
          "restCallInClassName": "preserve.service.PreserveServiceImpl"
        }
      ]
    },
    {
      "source": "ts-rebook-service",
      "target": "ts-travel-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-train-service/api/v1/trainservice/trains/byName/",
          "requestReturn": "edu.fudan.common.entity.TrainType",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips/{tripId}",
          "isCollection": false,
          "parentMethod": "rebook.service.RebookServiceImpl.queryTrainTypeByName",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-rebook-service",
          "restCallInClassName": "rebook.service.RebookServiceImpl"
        }
      ]
    },
    {
      "source": "ts-rebook-service",
      "target": "ts-route-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-seat-service/api/v1/seatservice/seats",
          "requestReturn": "edu.fudan.common.entity.Ticket",
          "endpointFunction": "ts-route-service/org.springframework.http.ResponseEntity route.controller.RouteController.createAndModifyRoute(route.entity.RouteInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-route-service",
          "targetEndpointUri": "/api/v1/routeservice/routes",
          "isCollection": false,
          "parentMethod": "rebook.service.RebookServiceImpl.dipatchSeat",
          "parentMethodParameters": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "int",
            "int",
            "java.util.List\u003cjava.lang.String\u003e",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-rebook-service",
          "restCallInClassName": "rebook.service.RebookServiceImpl"
        }
      ]
    },
    {
      "source": "ts-rebook-service",
      "target": "ts-contacts-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-route-service/api/v1/routeservice/routes/",
          "requestReturn": "edu.fudan.common.entity.Route",
          "endpointFunction": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-contacts-service",
          "targetEndpointUri": "api/v1/contactservice/contacts/{id}",
          "isCollection": false,
          "parentMethod": "rebook.service.RebookServiceImpl.getRouteByRouteId",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-rebook-service",
          "restCallInClassName": "rebook.service.RebookServiceImpl"
        }
      ]
    },
    {
      "source": "ts-route-plan-service",
      "target": "ts-travel2-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-travel-service/api/v1/travelservice/trips/left",
          "requestReturn": "java.util.ArrayList",
          "endpointFunction": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel2-service",
          "targetEndpointUri": "/api/v1/travel2service/trips/left",
          "isCollection": false,
          "parentMethod": "plan.service.RoutePlanServiceImpl.getTripFromHighSpeedTravelServive",
          "parentMethodParameters": [
            "edu.fudan.common.entity.TripInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-route-plan-service",
          "restCallInClassName": "plan.service.RoutePlanServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-travel-service/api/v1/travelservice/trips/routes",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.getTripsByRouteId(java.util.ArrayList\u003cjava.lang.String\u003e, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel2-service",
          "targetEndpointUri": "/api/v1/travel2service/trips/routes",
          "isCollection": false,
          "parentMethod": "plan.service.RoutePlanServiceImpl.searchMinStopStations",
          "parentMethodParameters": [
            "edu.fudan.common.entity.RoutePlanInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-route-plan-service",
          "restCallInClassName": "plan.service.RoutePlanServiceImpl"
        }
      ]
    },
    {
      "source": "ts-route-plan-service",
      "target": "ts-contacts-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-route-service/api/v1/routeservice/routes/",
          "requestReturn": "edu.fudan.common.entity.Route",
          "endpointFunction": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-contacts-service",
          "targetEndpointUri": "api/v1/contactservice/contacts/{id}",
          "isCollection": false,
          "parentMethod": "plan.service.RoutePlanServiceImpl.getRouteByRouteId",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-route-plan-service",
          "restCallInClassName": "plan.service.RoutePlanServiceImpl"
        }
      ]
    },
    {
      "source": "ts-route-plan-service",
      "target": "ts-travel-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-travel2-service/api/v1/travel2service/trips/left",
          "requestReturn": "java.util.ArrayList",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips/left",
          "isCollection": false,
          "parentMethod": "plan.service.RoutePlanServiceImpl.getTripFromNormalTrainTravelService",
          "parentMethodParameters": [
            "edu.fudan.common.entity.TripInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-route-plan-service",
          "restCallInClassName": "plan.service.RoutePlanServiceImpl"
        },
        {
          "type": "GET",
          "uri": "ts-route-service/api/v1/routeservice/routes//",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.getRouteByTripId(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/routes/{tripId}",
          "isCollection": false,
          "parentMethod": "plan.service.RoutePlanServiceImpl.searchMinStopStations",
          "parentMethodParameters": [
            "edu.fudan.common.entity.RoutePlanInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-route-plan-service",
          "restCallInClassName": "plan.service.RoutePlanServiceImpl"
        }
      ]
    },
    {
      "source": "ts-seat-service",
      "target": "ts-order-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-order-other-service/api/v1/orderOtherService/orderOther/tickets",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getTicketListByDateAndTripId(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order/tickets",
          "isCollection": false,
          "parentMethod": "seat.service.SeatServiceImpl.distributeSeat",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Seat",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-seat-service",
          "restCallInClassName": "seat.service.SeatServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-order-other-service/api/v1/orderOtherService/orderOther/tickets",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-order-service/org.springframework.http.HttpEntity order.controller.OrderController.getTicketListByDateAndTripId(edu.fudan.common.entity.Seat, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-order-service",
          "targetEndpointUri": "/api/v1/orderservice/order/tickets",
          "isCollection": false,
          "parentMethod": "seat.service.SeatServiceImpl.getLeftTicketOfInterval",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Seat",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-seat-service",
          "restCallInClassName": "seat.service.SeatServiceImpl"
        }
      ]
    },
    {
      "source": "ts-seat-service",
      "target": "ts-food-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-order-service/api/v1/orderservice/order/tickets",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-food-service",
          "targetEndpointUri": "/api/v1/foodservice/orders",
          "isCollection": false,
          "parentMethod": "seat.service.SeatServiceImpl.distributeSeat",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Seat",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-seat-service",
          "restCallInClassName": "seat.service.SeatServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-order-service/api/v1/orderservice/order/tickets",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-food-service/org.springframework.http.HttpEntity foodsearch.controller.FoodController.createFoodOrder(foodsearch.entity.FoodOrder, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-food-service",
          "targetEndpointUri": "/api/v1/foodservice/orders",
          "isCollection": false,
          "parentMethod": "seat.service.SeatServiceImpl.getLeftTicketOfInterval",
          "parentMethodParameters": [
            "edu.fudan.common.entity.Seat",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-seat-service",
          "restCallInClassName": "seat.service.SeatServiceImpl"
        }
      ]
    },
    {
      "source": "ts-travel-plan-service",
      "target": "ts-travel-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-train-service/api/v1/trainservice/trains/byName/",
          "requestReturn": "edu.fudan.common.entity.TrainType",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips/{tripId}",
          "isCollection": false,
          "parentMethod": "travelplan.service.TravelPlanServiceImpl.queryTrainTypeByName",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-travel-plan-service",
          "restCallInClassName": "travelplan.service.TravelPlanServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-travel2-service/api/v1/travel2service/trips/left",
          "requestReturn": "java.util.ArrayList",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips/left",
          "isCollection": false,
          "parentMethod": "travelplan.service.TravelPlanServiceImpl.tripsFromNormal",
          "parentMethodParameters": [
            "edu.fudan.common.entity.TripInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-travel-plan-service",
          "restCallInClassName": "travelplan.service.TravelPlanServiceImpl"
        }
      ]
    },
    {
      "source": "ts-travel-plan-service",
      "target": "ts-travel2-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-travel-service/api/v1/travelservice/trips/left",
          "requestReturn": "java.util.List",
          "endpointFunction": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.queryInfo(edu.fudan.common.entity.TripInfo, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel2-service",
          "targetEndpointUri": "/api/v1/travel2service/trips/left",
          "isCollection": false,
          "parentMethod": "travelplan.service.TravelPlanServiceImpl.tripsFromHighSpeed",
          "parentMethodParameters": [
            "edu.fudan.common.entity.TripInfo",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-travel-plan-service",
          "restCallInClassName": "travelplan.service.TravelPlanServiceImpl"
        }
      ]
    },
    {
      "source": "ts-travel-service",
      "target": "ts-admin-basic-info-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-basic-service/api/v1/basicservice/basic/travels",
          "requestReturn": "java.util.List",
          "endpointFunction": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-admin-basic-info-service",
          "targetEndpointUri": "/api/v1/adminbasicservice/adminbasic/trains",
          "isCollection": false,
          "parentMethod": "travel.service.TravelServiceImpl.getTicketsByBatch",
          "parentMethodParameters": [
            "java.util.List\u003ctravel.entity.Trip\u003e",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-travel-service",
          "restCallInClassName": "travel.service.TravelServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-basic-service/api/v1/basicservice/basic/travel",
          "requestReturn": "edu.fudan.common.entity.TripResponse",
          "endpointFunction": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-admin-basic-info-service",
          "targetEndpointUri": "/api/v1/adminbasicservice/adminbasic/trains",
          "isCollection": false,
          "parentMethod": "travel.service.TravelServiceImpl.getTickets",
          "parentMethodParameters": [
            "travel.entity.Trip",
            "edu.fudan.common.entity.Route",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-travel-service",
          "restCallInClassName": "travel.service.TravelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-travel-service",
      "target": "ts-contacts-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-route-service/api/v1/routeservice/routes/",
          "requestReturn": "edu.fudan.common.entity.Route",
          "endpointFunction": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-contacts-service",
          "targetEndpointUri": "api/v1/contactservice/contacts/{id}",
          "isCollection": false,
          "parentMethod": "travel.service.TravelServiceImpl.getRouteByRouteId",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-travel-service",
          "restCallInClassName": "travel.service.TravelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-travel-service",
      "target": "ts-travel2-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-train-service/api/v1/trainservice/trains/byName/",
          "requestReturn": "edu.fudan.common.entity.TrainType",
          "endpointFunction": "ts-travel2-service/org.springframework.http.HttpEntity travel2.controller.Travel2Controller.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel2-service",
          "targetEndpointUri": "/api/v1/travel2service/trips/{tripId}",
          "isCollection": false,
          "parentMethod": "travel.service.TravelServiceImpl.getTrainTypeByName",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-travel-service",
          "restCallInClassName": "travel.service.TravelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-travel2-service",
      "target": "ts-travel-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-train-service/api/v1/trainservice/trains/byName/",
          "requestReturn": "edu.fudan.common.entity.TrainType",
          "endpointFunction": "ts-travel-service/org.springframework.http.HttpEntity travel.controller.TravelController.retrieve(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-travel-service",
          "targetEndpointUri": "/api/v1/travelservice/trips/{tripId}",
          "isCollection": false,
          "parentMethod": "travel2.service.TravelServiceImpl.getTrainTypeByName",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-travel2-service",
          "restCallInClassName": "travel2.service.TravelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-travel2-service",
      "target": "ts-admin-basic-info-service",
      "requests": [
        {
          "type": "POST",
          "uri": "ts-basic-service/api/v1/basicservice/basic/travel",
          "requestReturn": "edu.fudan.common.entity.TripResponse",
          "endpointFunction": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-admin-basic-info-service",
          "targetEndpointUri": "/api/v1/adminbasicservice/adminbasic/trains",
          "isCollection": false,
          "parentMethod": "travel2.service.TravelServiceImpl.getTickets",
          "parentMethodParameters": [
            "travel2.entity.Trip",
            "edu.fudan.common.entity.Route",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-travel2-service",
          "restCallInClassName": "travel2.service.TravelServiceImpl"
        },
        {
          "type": "POST",
          "uri": "ts-basic-service/api/v1/basicservice/basic/travels",
          "requestReturn": "java.util.List",
          "endpointFunction": "ts-admin-basic-info-service/org.springframework.http.HttpEntity adminbasic.controller.AdminBasicInfoController.addTrain(edu.fudan.common.entity.TrainType, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-admin-basic-info-service",
          "targetEndpointUri": "/api/v1/adminbasicservice/adminbasic/trains",
          "isCollection": false,
          "parentMethod": "travel2.service.TravelServiceImpl.getTicketsByBatch",
          "parentMethodParameters": [
            "java.util.List\u003ctravel2.entity.Trip\u003e",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-travel2-service",
          "restCallInClassName": "travel2.service.TravelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-travel2-service",
      "target": "ts-contacts-service",
      "requests": [
        {
          "type": "GET",
          "uri": "ts-route-service/api/v1/routeservice/routes/",
          "requestReturn": "edu.fudan.common.entity.Route",
          "endpointFunction": "ts-contacts-service/org.springframework.http.HttpEntity contacts.controller.ContactsController.getContactsByContactsId(java.lang.String, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-contacts-service",
          "targetEndpointUri": "api/v1/contactservice/contacts/{id}",
          "isCollection": false,
          "parentMethod": "travel2.service.TravelServiceImpl.getRouteByRouteId",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpHeaders"
          ],
          "msName": "ts-travel2-service",
          "restCallInClassName": "travel2.service.TravelServiceImpl"
        }
      ]
    },
    {
      "source": "ts-wait-order-service",
      "target": "ts-contacts-service",
      "requests": [
        {
          "type": "POST",
          "uri": "/api/v1/contactservice/preserve",
          "requestReturn": "edu.fudan.common.util.Response",
          "endpointFunction": "ts-contacts-service/org.springframework.http.ResponseEntity contacts.controller.ContactsController.createNewContacts(contacts.entity.Contacts, org.springframework.http.HttpHeaders)",
          "endpointMsName": "ts-contacts-service",
          "targetEndpointUri": "api/v1/contactservice/contacts",
          "isCollection": false,
          "parentMethod": "waitorder.utils.PollThread.doPreserve",
          "parentMethodParameters": [
            "java.lang.String",
            "org.springframework.http.HttpEntity"
          ],
          "msName": "ts-wait-order-service",
          "restCallInClassName": "waitorder.utils.PollThread"
        }
      ]
    }
  ]
}
